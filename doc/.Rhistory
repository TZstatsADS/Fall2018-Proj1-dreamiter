summarise_each(funs(mean))
topic.summary=as.data.frame(topic.summary)
heatmap.2(as.matrix(topic.summary[,-1]), Rowv = FALSE,
scale = "column", key=F,
col = bluered(100),
cexRow = 0.9, cexCol = 0.9, margins = c(8, 8),
trace = "none", density.info = "none")
par(mar=c(1,1,1,1))
topic.summary=tbl_df(hm_data.df)%>%
select(gender, Work:Exercise)%>%
group_by(gender)%>%
summarise_at(funs(mean))
par(mar=c(1,1,1,1))
topic.summary=tbl_df(hm_data.df)%>%
select(gender, Work:Exercise)%>%
group_by(gender)%>%
summarise_each(funs(mean))
topic.summary=as.data.frame(topic.summary)
heatmap.2(as.matrix(topic.summary[,-1]), Rowv = FALSE,
scale = "column", key=F,
col = bluered(100),
cexRow = 0.9, cexCol = 0.9, margins = c(8, 8),
trace = "none", density.info = "none")
?heatmap.2
par(mar=c(1,1,1,1))
topic.summary=tbl_df(hm_data.df)%>%
select(gender, Work:Exercise)%>%
group_by(gender)%>%
summarise_each(funs(mean))
topic.summary=as.data.frame(topic.summary)
heatmap.2(as.matrix(topic.summary[,-1]), Rowv = FALSE,
scale = "column", key=F, na.rm = T,
col = bluered(100),
cexRow = 0.9, cexCol = 0.9, margins = c(8, 8),
trace = "none", density.info = "none")
heatmap.2(as.matrix(topic.summary[,-1]), Rowv = FALSE,
scale = "column", key=T, na.rm = T,
col = bluered(100),
cexRow = 0.9, cexCol = 0.9, margins = c(8, 8),
trace = "none", density.info = "none")
heatmap.2(as.matrix(topic.summary[,-1]), Rowv = FALSE,
scale = "column", key=F, na.rm = T,
col = bluered(100), key.ylab = T,
cexRow = 0.9, cexCol = 0.9, margins = c(8, 8),
trace = "none", density.info = "none")
par(mar=c(1,1,1,1))
topic.summary=tbl_df(hm_data.df[!is.na(hm_data.df$gender),])%>%
select(gender, Work:Exercise)%>%
group_by(gender)%>%
summarise_each(funs(mean))
topic.summary=as.data.frame(topic.summary)
heatmap.2(as.matrix(topic.summary[,-1]), Rowv = FALSE,
scale = "column", key=F, na.rm = T,
col = bluered(100),
cexRow = 0.9, cexCol = 0.9, margins = c(8, 8),
trace = "none", density.info = "none")
par(mar=c(1,1,1,1))
topic.summary=tbl_df(hm_data.df[!is.na(hm_data.df$gender),])%>%
select(gender, Work:Exercise)%>%
group_by(gender)%>%
summarise_each(funs(mean))
topic.summary=as.data.frame(topic.summary)
heatmap.2(as.matrix(topic.summary[,-1]), Rowv = FALSE,
scale = "column", key=F, na.rm = T,
col = bluered(100), key.ylab = c("female","male","others"),
cexRow = 0.9, cexCol = 0.9, margins = c(8, 8),
trace = "none", density.info = "none")
par(mar=c(1,1,1,1))
topic.summary=tbl_df(hm_data.df[!is.na(hm_data.df$gender),])%>%
select(gender, Work:Exercise)%>%
group_by(gender)%>%
summarise_each(funs(mean))
topic.summary=as.data.frame(topic.summary)
heatmap.2(as.matrix(topic.summary), Rowv = FALSE,
scale = "column", key=F, na.rm = T,
col = bluered(100),
cexRow = 0.9, cexCol = 0.9, margins = c(8, 8),
trace = "none", density.info = "none")
par(mar=c(1,1,1,1))
topic.summary=tbl_df(hm_data.df[!is.na(hm_data.df$gender),])%>%
select(gender, Work:Exercise)%>%
group_by(gender)%>%
summarise_each(funs(mean))
topic.summary=as.data.frame(topic.summary)
heatmap.2(as.matrix(topic.summary[,-1]), Rowv = FALSE,
scale = "column", key=F, na.rm = T,
col = bluered(100),
cexRow = 0.9, cexCol = 0.9, margins = c(8, 8),
trace = "none", density.info = "none")
par(mar=c(1,1,1,1))
topic.summary=tbl_df(hm_data.df[!is.na(hm_data.df$gender),])%>%
select(gender, Work:Exercise)%>%
group_by(gender)%>%
summarise_each(funs(mean))
topic.summary=as.data.frame(topic.summary)
heatmap.2(as.matrix(topic.summary[,-1]), Rowv = T,
scale = "column", key=F, na.rm = T,
col = bluered(100),
cexRow = 0.9, cexCol = 0.9, margins = c(8, 8),
trace = "none", density.info = "none")
par(mar=c(1,1,1,1))
topic.summary=tbl_df(hm_data.df[!is.na(hm_data.df$gender),])%>%
select(gender, Work:Exercise)%>%
group_by(gender)%>%
summarise_each(funs(mean))
topic.summary=as.data.frame(topic.summary)
heatmap.2(as.matrix(topic.summary[,-1]), Rowv = FALSE,
scale = "column", key=F, na.rm = T,
col = bluered(100),
cexRow = 0.9, cexCol = 0.9, margins = c(8, 8),
trace = "none", density.info = "none")
par(mar=c(1,1,1,1))
topic.summary=tbl_df(hm_data.df[!is.na(hm_data.df$gender),])%>%
select(gender, Work:Exercise)%>%
group_by(gender)%>%
summarise_each(funs(mean))
topic.summary=as.data.frame(topic.summary)
heatmap.2(as.matrix(topic.summary[,-1]), Rowv = FALSE,
scale = "column", key=F, na.rm = T,
col = bluered(100), RowSideColors = T,
cexRow = 0.9, cexCol = 0.9, margins = c(8, 8),
trace = "none", density.info = "none")
par(mar=c(1,1,1,1))
topic.summary=tbl_df(hm_data.df[!is.na(hm_data.df$gender),])%>%
select(gender, Work:Exercise)%>%
group_by(gender)%>%
summarise_each(funs(mean))
topic.summary=as.data.frame(topic.summary)
heatmap.2(as.matrix(topic.summary[,-1]), Rowv = FALSE,
scale = "column", key=F, na.rm = T,
col = bluered(100), RowSideColors = c("f","m","o"),
cexRow = 0.9, cexCol = 0.9, margins = c(8, 8),
trace = "none", density.info = "none")
par(mar=c(1,1,1,1))
topic.summary=tbl_df(hm_data.df[!is.na(hm_data.df$gender),])%>%
select(gender, Work:Exercise)%>%
group_by(gender)%>%
summarise_each(funs(mean))
topic.summary=as.data.frame(topic.summary)
heatmap.2(as.matrix(topic.summary[,-1]), Rowv = FALSE,
scale = "column", key=F, na.rm = T,
col = bluered(100), labRow = c("f","m","o"),
cexRow = 0.9, cexCol = 0.9, margins = c(8, 8),
trace = "none", density.info = "none")
par(mar=c(1,1,1,1))
topic.summary=tbl_df(hm_data.df[!is.na(hm_data.df$marital),])%>%
select(marital, Work:Exercise)%>%
group_by(marital)%>%
summarise_each(funs(mean))
topic.summary=as.data.frame(topic.summary)
heatmap.2(as.matrix(topic.summary[,-1]), Rowv = FALSE,
scale = "column", key=F, na.rm = T,
col = bluered(100),
cexRow = 0.9, cexCol = 0.9, margins = c(8, 8),
trace = "none", density.info = "none")
par(mar=c(1,1,1,1))
topic.summary1=tbl_df(hm_data.df[!is.na(hm_data.df$gender),])%>%
select(gender, Work:Exercise)%>%
group_by(gender)%>%
summarise_each(funs(mean)) %>%
as.data.frame()
heatmap.2(as.matrix(topic.summary1[,-1]), Rowv = FALSE,
scale = "column", key=F, na.rm = T,
col = bluered(100), labRow = c("f","m","o"),
cexRow = 0.9, cexCol = 0.9, margins = c(8, 8),
trace = "none", density.info = "none")
par(mar=c(1,1,1,1))
topic.summary2=tbl_df(hm_data.df[!is.na(hm_data.df$marital),])%>%
select(marital, Work:Exercise)%>%
group_by(marital)%>%
summarise_each(funs(mean)) %>%
as.data.frame()
heatmap.2(as.matrix(topic.summary2[,-1]), Rowv = FALSE,
scale = "column", key=F, na.rm = T,
col = bluered(100),
cexRow = 0.9, cexCol = 0.9, margins = c(8, 8),
trace = "none", density.info = "none")
par(mar=c(1,1,1,1))
topic.summary2=tbl_df(hm_data.df[!is.na(hm_data.df$marital),])%>%
select(marital, Work:Exercise)%>%
group_by(marital)%>%
summarise_each(funs(mean)) %>%
as.data.frame()
heatmap.2(as.matrix(topic.summary2[,-1]), Rowv = FALSE,
scale = "column", key=F, na.rm = T, col = bluered(100),
labRow = c("divorced","married","separated","single","widowed"),
cexRow = 0.9, cexCol = 0.9, margins = c(8, 8),
trace = "none", density.info = "none")
topics.hash=c("Work","Family","Vacation","Pets","People","Celebration","Social","Entertainment","School","Exercise")
hm_data <- hm_data[rowTotals > 0, ]
hm_data$ldatopic <- as.vector(ldaOut.topics)
hm_data$ldahash <- topics.hash[ldaOut.topics]
colnames(topicProbabilities) <- topics.hash
hm_data.df <- cbind(hm_data, topicProbabilities)
par(mar=c(1,1,1,1))
topic.summary1=tbl_df(hm_data.df[!is.na(hm_data.df$gender),])%>%
select(gender, Work:Exercise)%>%
group_by(gender)%>%
summarise_each(funs(mean)) %>%
as.data.frame()
heatmap.2(as.matrix(topic.summary1[,-1]), Rowv = FALSE,
scale = "column", key=F, na.rm = T,
col = bluered(100), labRow = c("f","m","o"),
cexRow = 0.9, cexCol = 0.9, margins = c(8, 8),
trace = "none", density.info = "none")
topics.hash=c("Work","Family","Vacation","Pets","People","Celebration","Social","Entertainment","School","Exercise")
hm_data <- hm_data[rowTotals > 0, ]
hm_data$ldatopic <- as.vector(ldaOut.topics)
hm_data$ldahash <- topics.hash[ldaOut.topics]
colnames(topicProbabilities) <- topics.hash
hm_data.df <- cbind(hm_data, topicProbabilities)
packages.used=c("plyr","tm","tidytext","tidyverse","DT","wordcloud","scales","wordcloud2",
"gplots","sentimentr","dplyr","qdap","syuzhet","ggplot2","topicmodels")
# check packages that need to be installed.
packages.needed=setdiff(packages.used,
intersect(installed.packages()[,1],
packages.used))
# install additional packages
if(length(packages.needed)>0){
install.packages(packages.needed, dependencies = TRUE)
}
library(tm)
library(tidytext)
library(tidyverse)
library(DT)
library(wordcloud)
library(scales)
library(wordcloud2)
library(gplots)
library(sentimentr)
library(dplyr)
library(qdap)
library(syuzhet)
library(ggplot2)
library(topicmodels)
# Function
source("../lib/wordcloud_group.R")
hm_data <- read_csv("../output/processed_moments.csv")
urlfile<-'https://raw.githubusercontent.com/rit-public/HappyDB/master/happydb/data/demographic.csv'
demo_data <- read_csv(urlfile)
hm_data <- hm_data %>%
inner_join(demo_data, by = "wid") %>%
select(wid,
original_hm,
baseform_hm,
num_sentence,
gender,
marital,
parenthood,
reflection_period,
age,
country,
ground_truth_category,
predicted_category,
text) %>%
mutate(count = sapply(hm_data$text, wordcount))
topics.hash=c("Work","Family","Vacation","Pets","People","Celebration","Social","Entertainment","School","Exercise")
hm_data <- hm_data[rowTotals > 0, ]
hm_data$ldatopic <- as.vector(ldaOut.topics)
hm_data$ldahash <- topics.hash[ldaOut.topics]
colnames(topicProbabilities) <- topics.hash
hm_data.df <- cbind(hm_data, topicProbabilities)
par(mar=c(1,1,1,1))
topic.summary1=tbl_df(hm_data.df[!is.na(hm_data.df$gender),])%>%
select(gender, Work:Exercise)%>%
group_by(gender)%>%
summarise_each(funs(mean)) %>%
as.data.frame()
heatmap.2(as.matrix(topic.summary1[,-1]), Rowv = FALSE,
scale = "column", key=F, na.rm = T,
col = bluered(100), labRow = c("f","m","o"),
cexRow = 0.9, cexCol = 0.9, margins = c(8, 8),
trace = "none", density.info = "none")
par(mar=c(1,1,1,1))
topic.summary3=tbl_df(hm_data.df[!is.na(hm_data.df$reflection_period),])%>%
select(reflection_period, Work:Exercise)%>%
group_by(reflection_period)%>%
summarise_each(funs(mean)) %>%
as.data.frame()
heatmap.2(as.matrix(topic.summary3[,-1]), Rowv = FALSE,
scale = "column", key=F, na.rm = T, col = bluered(100),
labRow = c("24h","3m"),
cexRow = 0.9, cexCol = 0.9, margins = c(8, 8),
trace = "none", density.info = "none")
ggplot(subset(hm_data, country %in% country.int), aes(x = country, y = Sentiment.Value, color = country)) + geom_boxplot()
country.int <- tail(names(sort(table(hm_data$country))), 10)
table(hm_data$country)
ggplot(subset(hm_data, country %in% country.int), aes(x = country, y = Sentiment.Value, color = country)) + geom_boxplot()
country.int
par(mar=c(1,1,1,1))
topic.summary4=subset(hm_data.df, country %in% country.int) %>%
tbl_df()%>%
select(country, Work:Exercise)%>%
group_by(country)%>%
summarise_each(funs(mean)) %>%
as.data.frame()
heatmap.2(as.matrix(topic.summary4[,-1]), Rowv = FALSE,
scale = "column", key=F, na.rm = T, col = bluered(100),
labRow = country.int,
cexRow = 0.9, cexCol = 0.9, margins = c(8, 8),
trace = "none", density.info = "none")
str(hm_data.df)
word_count_by_topic <- hm_data.df %>%
unnest_tokens(word, text) %>%
group_by(ldahash) %>%
count(word, sort = TRUE)
library(dplyr)
word_count_by_topic <- hm_data.df %>%
unnest_tokens(word, text) %>%
group_by(ldahash) %>%
count(word, sort = TRUE)
detach(plyr)
?detach
library(dplyr)
word_count_by_topic <- hm_data.df %>%
unnest_tokens(word, text) %>%
group_by(ldahash) %>%
count(word, sort = TRUE)
detach(package:plyr)
library(dplyr)
word_count_by_topic <- hm_data.df %>%
unnest_tokens(word, text) %>%
group_by(ldahash) %>%
count(word, sort = TRUE)
word_count_by_topic %>%
slice(1:10) %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(x = word, y = n, color = ldahash)) + geom_col() +  facet_wrap(~ldahash, scales = "free") + xlab(NULL) + ylab("Word Frequency")+ coord_flip()
packages.used=c("plyr","tm","tidytext","tidyverse","DT","wordcloud","scales","wordcloud2",
"gplots","sentimentr","dplyr","qdap","syuzhet","ggplot2","topicmodels")
# check packages that need to be installed.
packages.needed=setdiff(packages.used,
intersect(installed.packages()[,1],
packages.used))
# install additional packages
if(length(packages.needed)>0){
install.packages(packages.needed, dependencies = TRUE)
}
library(tm)
library(tidytext)
library(tidyverse)
library(DT)
library(wordcloud)
library(scales)
library(wordcloud2)
library(gplots)
library(sentimentr)
library(dplyr)
library(qdap)
library(syuzhet)
library(ggplot2)
library(topicmodels)
# Function
source("../lib/wordcloud_group.R")
hm_data <- read_csv("../output/processed_moments.csv")
urlfile<-'https://raw.githubusercontent.com/rit-public/HappyDB/master/happydb/data/demographic.csv'
demo_data <- read_csv(urlfile)
hm_data <- hm_data %>%
inner_join(demo_data, by = "wid") %>%
select(wid,
original_hm,
baseform_hm,
num_sentence,
gender,
marital,
parenthood,
reflection_period,
age,
country,
ground_truth_category,
predicted_category,
text) %>%
mutate(count = sapply(hm_data$text, wordcount))
knitr::opts_chunk$set(echo = TRUE)
packages.used=c("plyr","tm","tidytext","tidyverse","DT","wordcloud","scales","wordcloud2",
"gplots","sentimentr","ngram","dplyr","qdap","syuzhet","ggplot2","topicmodels")
# check packages that need to be installed.
packages.needed=setdiff(packages.used,
intersect(installed.packages()[,1],
packages.used))
# install additional packages
if(length(packages.needed)>0){
install.packages(packages.needed, dependencies = TRUE)
}
library(tm)
library(tidytext)
library(tidyverse)
library(DT)
library(wordcloud)
library(scales)
library(wordcloud2)
library(gplots)
library(sentimentr)
library(ngram)
library(dplyr)
library(qdap)
library(syuzhet)
library(ggplot2)
library(topicmodels)
# Function
source("../lib/wordcloud_group.R")
hm_data <- read_csv("../output/processed_moments.csv")
urlfile<-'https://raw.githubusercontent.com/rit-public/HappyDB/master/happydb/data/demographic.csv'
demo_data <- read_csv(urlfile)
hm_data <- hm_data %>%
inner_join(demo_data, by = "wid") %>%
select(wid,
original_hm,
baseform_hm,
num_sentence,
gender,
marital,
parenthood,
reflection_period,
age,
country,
ground_truth_category,
predicted_category,
text) %>%
mutate(count = sapply(hm_data$text, wordcount))
packages.used=c("plyr","tm","tidytext","tidyverse","DT","wordcloud","scales","wordcloud2",
"gplots","sentimentr","ngram","dplyr","qdap","syuzhet","ggplot2","topicmodels")
# check packages that need to be installed.
packages.needed=setdiff(packages.used,
intersect(installed.packages()[,1],
packages.used))
# install additional packages
if(length(packages.needed)>0){
install.packages(packages.needed, dependencies = TRUE)
}
library(tm)
library(tidytext)
library(tidyverse)
library(DT)
library(wordcloud)
library(scales)
library(wordcloud2)
library(gplots)
library(sentimentr)
library(ngram)
library(dplyr)
library(qdap)
library(syuzhet)
library(ggplot2)
library(topicmodels)
# Function
source("../lib/wordcloud_group.R")
hm_data <- read_csv("../output/processed_moments.csv")
urlfile<-'https://raw.githubusercontent.com/rit-public/HappyDB/master/happydb/data/demographic.csv'
demo_data <- read_csv(urlfile)
hm_data <- hm_data %>%
inner_join(demo_data, by = "wid") %>%
select(wid,
original_hm,
baseform_hm,
num_sentence,
gender,
marital,
parenthood,
reflection_period,
age,
country,
ground_truth_category,
predicted_category,
text) %>%
mutate(count = sapply(hm_data$text, wordcount))
packages.used=c("plyr","tm","tidytext","tidyverse","DT","wordcloud","scales","wordcloud2",
"gplots","sentimentr","ngram","dplyr","qdap","syuzhet","ggplot2","topicmodels")
# check packages that need to be installed.
packages.needed=setdiff(packages.used,
intersect(installed.packages()[,1],
packages.used))
# install additional packages
if(length(packages.needed)>0){
install.packages(packages.needed, dependencies = TRUE)
}
library(tm)
library(tidytext)
library(tidyverse)
library(DT)
library(wordcloud)
library(scales)
library(wordcloud2)
library(gplots)
library(sentimentr)
library(ngram)
library(dplyr)
library(qdap)
library(syuzhet)
library(ggplot2)
library(topicmodels)
# Function
source("../lib/wordcloud_group.R")
hm_data <- read_csv("../output/processed_moments.csv")
urlfile<-'https://raw.githubusercontent.com/rit-public/HappyDB/master/happydb/data/demographic.csv'
demo_data <- read_csv(urlfile)
hm_data <- hm_data %>%
inner_join(demo_data, by = "wid") %>%
select(wid,
original_hm,
baseform_hm,
num_sentence,
gender,
marital,
parenthood,
reflection_period,
age,
country,
ground_truth_category,
predicted_category,
text) %>%
mutate(count = sapply(hm_data$text, wordcount))
